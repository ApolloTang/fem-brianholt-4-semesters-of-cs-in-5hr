let l = console.log

var insertionSort = nums => {
  for (let i = 1; i < nums.length; i++) {
    for (let j = 0; j < i; j++) {

      const an = []
      s = nums.length;
      while(s--) { an.push(' ') }
      an[i] = 'i'; an[j]='j'
      l(an)
      l(nums)

      if (nums[i] < nums[j]) {
        let spliced = nums.splice(i, 1);
        nums.splice(j, 0, spliced[0]);
      }
    }
    l('------')
  }
};

insertionSort(['6','1','4','3','2','5']);


/*
[ 'j', 'i', ' ', ' ', ' ', ' ' ]
[ '6', '1', '4', '3', '2', '5' ]
------
[ 'j', ' ', 'i', ' ', ' ', ' ' ]
[ '1', '6', '4', '3', '2', '5' ]
[ ' ', 'j', 'i', ' ', ' ', ' ' ]
[ '1', '6', '4', '3', '2', '5' ]
------
[ 'j', ' ', ' ', 'i', ' ', ' ' ]
[ '1', '4', '6', '3', '2', '5' ]
[ ' ', 'j', ' ', 'i', ' ', ' ' ]
[ '1', '4', '6', '3', '2', '5' ]
[ ' ', ' ', 'j', 'i', ' ', ' ' ]
[ '1', '3', '4', '6', '2', '5' ]
------
[ 'j', ' ', ' ', ' ', 'i', ' ' ]
[ '1', '3', '4', '6', '2', '5' ]
[ ' ', 'j', ' ', ' ', 'i', ' ' ]
[ '1', '3', '4', '6', '2', '5' ]
[ ' ', ' ', 'j', ' ', 'i', ' ' ]
[ '1', '2', '3', '4', '6', '5' ]
[ ' ', ' ', ' ', 'j', 'i', ' ' ]
[ '1', '2', '3', '4', '6', '5' ]
------
[ 'j', ' ', ' ', ' ', ' ', 'i' ]
[ '1', '2', '3', '4', '6', '5' ]
[ ' ', 'j', ' ', ' ', ' ', 'i' ]
[ '1', '2', '3', '4', '6', '5' ]
[ ' ', ' ', 'j', ' ', ' ', 'i' ]
[ '1', '2', '3', '4', '6', '5' ]
[ ' ', ' ', ' ', 'j', ' ', 'i' ]
[ '1', '2', '3', '4', '6', '5' ]
[ ' ', ' ', ' ', ' ', 'j', 'i' ]
[ '1', '2', '3', '4', '6', '5' ]
------
*/
